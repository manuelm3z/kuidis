doctype html
html(lang='es')
    head
        title='Kuidis'
        meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1")

        //Stylesheets and Preprocessors
        //==============================

        //You can always bring in CSS files manually with `<link>` tags, or asynchronously
        //using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        //of Sails' conventional asset pipeline (boilerplate Gruntfile).

        //By default, stylesheets from your `assets/styles` folder are included
        //here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        //are supported. In production, your styles will be minified and concatenated into
        //a single file.

        //To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        //For example, here are a few things you could do:

        //+ Change the order of your CSS files
        //+ Import stylesheets from other directories
        //+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
        link(href='https://fonts.googleapis.com/css?family=Roboto', rel='stylesheet', type='text/css')

        // STYLES
        link(rel="stylesheet", href="/bower_components/bootstrap/dist/css/bootstrap.css")
        link(rel="stylesheet", href="/bower_components/bootstrap/dist/css/bootstrap-theme.css")
        link(rel="stylesheet", href="/bower_components/font-awesome/css/font-awesome.css")
        link(rel="stylesheet", href="/styles/importer.css")
        // STYLES END
    body
        header
            nav.navbar.navbar-kuidis.navbar-fixed-top
                div.container
                    div.navbar-header
                        button(type="button", data-toggle="collapse", data-target=".navbar-collapse").navbar-toggle.collapsed
                            span.sr-only Toggle navigation
                            span.icon-bar
                            span.icon-bar
                            span.icon-bar
                        a(rel="home" href="/").navbar-brand
                            img(src="/images/logo-beta.png", width="545", height="142")
                    div.navbar-collapse.collapse
                        ul.nav.navbar-nav
                            li.active
                                block linkhome
                                    a(href="/") INICIO
                            li
                                a(href="#how-it-works") COMO FUNCIONA
                            li
                                a(href="#about-us") NOSOTROS
                            li
                                a(href="#contact-us") CONTACTO
                            li
                                a(href="/terms") LEGAL
                            li
                                a(href="https://www.facebook.com/kuidis.social")
                                    i(aria-hidden="true").fa.fa-facebook-square
                            li
                                a(href="https://twitter.com/kuidis")
                                    i(aria-hidden="true").fa.fa-twitter-square
        block content


        // Client-side Templates
        // ========================

        // HTML templates are important prerequisites of modern, rich client applications.
        // To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        // that you load these templates client-side.

        // By default, your Gruntfile is configured to automatically load and precompile
        // client-side JST templates in your `assets/templates` folder, then
        // include them here automatically (between TEMPLATES and TEMPLATES END).

        // To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        // For example, here are a few things you could do:

        //    + Import templates from other directories
        //    + Use a different template engine (handlebars, jade, dust, etc.)
        //    + Internationalize your client-side templates using a server-side
        //      stringfile before they're served.

        // TEMPLATES
        
        // TEMPLATES END


        // Client-side Javascript
        //    ========================

        //    You can always bring in JS files manually with `script` tags, or asynchronously
        //    on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        //    take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

        //    By default, files in your `assets/js` folder are included here
        //    automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
        //    CoffeeScript (.coffee) are supported. In production, your scripts will be minified
        //    and concatenated into a single file.

        //    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        //    For example, here are a few things you could do:

        //        + Change the order of your scripts
        //        + Import scripts from other directories
        //        + Use a different preprocessor, like TypeScript


        // SCRIPTS
        script(src="/js/dependencies/sails.io.js")
        script(src="/bower_components/jquery/dist/jquery.js")
        script(src="/bower_components/bootstrap/dist/js/bootstrap.js")
        script(src="/js/kuidis.js")
        // SCRIPTS END